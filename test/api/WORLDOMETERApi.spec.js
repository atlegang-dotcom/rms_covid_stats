/*
 * RMS_covid_stats_cal
 * returns covid data, such as daily confirmed cases, total deaths, total active cases, total cases, etc.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.21
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RmsCovidStatsCal);
  }
}(this, function(expect, RmsCovidStatsCal) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RmsCovidStatsCal.WORLDOMETERApi();
  });

  describe('(package)', function() {
    describe('WORLDOMETERApi', function() {
      describe('v3StatsWorldometerCountryGet', function() {
        it('should call v3StatsWorldometerCountryGet successfully', function(done) {
          // TODO: uncomment, update parameter values for v3StatsWorldometerCountryGet call and complete the assertions
          /*
          var countryCode = "countryCode_example";

          instance.v3StatsWorldometerCountryGet(countryCode, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            let dataCtr = data;
            expect(dataCtr).to.be.an(Array);
            expect(dataCtr).to.not.be.empty();
            for (let p in dataCtr) {
              let data = dataCtr[p];
              expect(data).to.be.a(RmsCovidStatsCal.WorldometerCountry);
              expect(data.countrycode).to.be.a('string');
              expect(data.countrycode).to.be("");
              expect(data.country).to.be.a('string');
              expect(data.country).to.be("");
              expect(data.lat).to.be.a('number');
              expect(data.lat).to.be(0);
              expect(data.lng).to.be.a('number');
              expect(data.lng).to.be(0);
              expect(data.totalConfirmed).to.be.a('number');
              expect(data.totalConfirmed).to.be(0);
              expect(data.totalDeaths).to.be.a('number');
              expect(data.totalDeaths).to.be(0);
              expect(data.totalRecovered).to.be.a('number');
              expect(data.totalRecovered).to.be(0);
              expect(data.dailyConfirmed).to.be.a('number');
              expect(data.dailyConfirmed).to.be(0);
              expect(data.dailyDeaths).to.be.a('number');
              expect(data.dailyDeaths).to.be(0);
              expect(data.activeCases).to.be.a('number');
              expect(data.activeCases).to.be(0);
              expect(data.totalCritical).to.be.a('number');
              expect(data.totalCritical).to.be(0);
              expect(data.totalConfirmedPerMillionPopulation).to.be.a('number');
              expect(data.totalConfirmedPerMillionPopulation).to.be(0);
              expect(data.totalDeathsPerMillionPopulation).to.be.a('number');
              expect(data.totalDeathsPerMillionPopulation).to.be(0);
              expect(data.FR).to.be.a('string');
              expect(data.FR).to.be("");
              expect(data.PR).to.be.a('string');
              expect(data.PR).to.be("");
              expect(data.lastUpdated).to.be.a('string');
              expect(data.lastUpdated).to.be("");
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('v3StatsWorldometerGlobalGet', function() {
        it('should call v3StatsWorldometerGlobalGet successfully', function(done) {
          // TODO: uncomment v3StatsWorldometerGlobalGet call and complete the assertions
          /*

          instance.v3StatsWorldometerGlobalGet(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(RmsCovidStatsCal.WorldometerGlobal);
            expect(data.totalConfirmed).to.be.a('number');
            expect(data.totalConfirmed).to.be(0);
            expect(data.totalDeaths).to.be.a('number');
            expect(data.totalDeaths).to.be(0);
            expect(data.totalRecovered).to.be.a('number');
            expect(data.totalRecovered).to.be(0);
            expect(data.totalNewCases).to.be.a('number');
            expect(data.totalNewCases).to.be(0);
            expect(data.totalNewDeaths).to.be.a('number');
            expect(data.totalNewDeaths).to.be(0);
            expect(data.totalActiveCases).to.be.a('number');
            expect(data.totalActiveCases).to.be(0);
            expect(data.totalCasesPerMillionPop).to.be.a('number');
            expect(data.totalCasesPerMillionPop).to.be(0);
            expect(data.created).to.be.a('string');
            expect(data.created).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
